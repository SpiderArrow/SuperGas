<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="TsConfiguracion.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAdIAAABSCAYAAADgp1VaAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wQAADsEBuJFr7QAADnFJREFUeF7tnYfLHcXbhr9/zYolsUQl9i6KCooEe0HRiCLGGiMkokGjgoIiCoqI
        grGBJaJi7xLsNZZY5sc9eSff5Mmzu3POnJ33vHDdcPGWMzv77MzZ596Z2T3n/5YtWxYAAABgOjBSAACA
        CjBSAACACjBSAACACjBSAACACjBSAACACjBSAACACjBSAACACjBSAACACjBSAACACjBSAACACjBSAACA
        CjBSAACACjBSAACACjBSAACACjBSAACACjBSAACACjBSAACACjBSAACACjBSAACACjBSAACACjBSAACA
        CjDSRixfvtz9PwAALG0w0oasWLEinHrqqeG0006LP8dE+1i5cmU48MAD3VgAAGA2YKQNWbVqVfjtt9/C
        X3/9FX+OxbZt28I///wT1q5dG/bZZx83FgAAmA0YaUMuvPDC0FIbNmwIe+21lxsLAADMBoy0IRdccMGC
        xbXRHXfcEfbYYw83FgAAmA0YaUPOP//8BYtro9tuu40RKQDAyGCkDWltpFoj3Xfffd1YAABgNmCkDWlt
        pK+88kpYt25dWLNmTbjpppvizyuvvDIcf/zxPI5TwP333x9++eWX2JZfffVVnJr3ykE76BOYRzDShrQ2
        Ut25q7t4t27dGlHi2bJlS1i/fn18POaAAw5w41xsTj755PDnn38uHMUOvfvuu27ZsfDWs7/99lu3LLSB
        PoF5BSNtSGsj7dPGjRvDscce68a52Dz22GMLUe4qGaxXfgxeeumlhb3uqjvvvNMtD+NDn8C8gpE2pLWR
        KvHceuut4dprrw2rV68ODz74YPj444/ja7///ns0rBNPPHFnfPMy3atRhqdnnnnGLT8GJO35gz6BeQUj
        bUhrI9WoU+a4//77R0466aRw++23h08//TS+LjN96KGHwhlnnOHGuxhcd911MTZPWhvzthkDphHnD/oE
        5hWMtCGtjVSPv8hA8xgOO+yw+EENn3zyyUKpEDZt2jQ3Zqq10D61HH3YG1tk8l45aAd9AvMIRtqQ1kaq
        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
        XcnBKk9yVp6ReolISbAvcWsE6KmVkXox962P6f963ZMXy6T1J9RHauO+trMq7ZNpjk/12LJj9IfwYvb2
        n6N20nlccpGiuqY5B6AMjLQhGg1ec8010Thff/31hbdt92hApvfaa6/FMhpB3nXXXeGWW24Ja9eujXUk
        9LfQd4zqZElSWfvF3kI3E7388suxjMz3vvvui1+5pu8vvfrqq+NXrNltZommlayGkobFm5byEmWeoJR0
        01Sdynqj4nw9zcpL2kpinnShoISUJzntu8uQpFZG2hezjj+1o372TQFKXiyq37tQSm2Sv99VVvtQ2yal
        cnmdCauuPvH2r+MoPT5tn/ddYoz+EF0x6/2SxyzUfnrv5uXVDl1x1JwDUAZG2ojly5fv8rfe9En33ntv
        OProo3d5XZxyyinhww8/jNOu+uLtkrtpL7300jiylDZt2rTbN7kccsghcb00nVwvvvhiOOKII3YpI2y8
        syRPmkl9ycjDSwD2ijtPICVSYsoTlpWXtEV+8VIjrw3GStxKlrNQVyzejTuTyovbqqtPavffZSZj9Yeo
        7RNdEOTvX1F7DkAZGOkioS/VTobyzTffhI0bN+6chtVPPYaiNU7dbPTBBx+E1atXF329mb4GTeao7fSt
        L+vWrdtZ73777RdOP/30na9/9tln4frrr1/0TzJSAvDK9lFSz6RJxBqxVVfSFpPuy1NLIxXexcik6oul
        xhjUnl6dVn19ov17o7whdZmoGLM/xLRtpve+N7NVew5AGRjpIqHpU02nJslMN2/eHNc1dceu1ip1160k
        45PZlYwSV6xYEa644oqda7B6pEajWRn1I488EtdoU3LRtLGmm716xsJL3n2JpQ9vmtQmNSWGkmTqxWDV
        l7RFaeJWG3jt0NpIhUZuJTErIZfGnKPkni4YSyRD6DMyq6E+mWT/KueZUc7Y/SFUn9qhVOqbvlFkzTkA
        ZWCki4RGicccc0x49tln4zpl0g8//LDw245nQDWqvPnmm906upDpPvXUU7vUpZuJkvT9oxrldt3kNCbe
        Ce2tRZXgXb17IxnVr2RiE6qMWObQtX+roaQtlNDSvvJjVWJUbCnpeqbkJfEWiTuPOZdtn0ljydGxqS7b
        LpL2o7ZJa3d9WJX0iVCc2oe9+ErHWHocLfojofbwYlb76bjVZ6XnzrTnAJSBkS4yWp984IEH4s1EOkG2
        b98e0Z29W7ZsiR/Z5203hKaBN2zYED9kIdUrY5ZpP/300/FRnFafYAS7Y5Oj5JUDgPkHI50D9MyojO2G
        G26Id9oK3d2r9UxN1XrbDJFGvKpXd/Pqjlz91FqrHqs5+OCD3e2gHI2yPPVNTQpvJM0nygAsXTDSOUHr
        nytXrox378oAvTtpp0GjTtUns55lvbADO1WWlE/jJtL0oqeSaU0AmE8wUoAKtLZk1/wmVek6HwDMJxgp
        QCWa4p3WTLVWynN7AEsbjBRgBmhk2jXN2yXdLYmJAix9MFKAGdL3mIcegdFNRZM8tgAA8w9GCgAAUAFG
        CgAAUAFGCgAAUAFGCgAAUAFGCgAAUAFGCgAAUAFGCgAAUAFGCgAAUAFGCgAAUAFGCgAAUAFGCgAAUAFG
        CgAAUAFGCgAAUAFGCgAAUAFGCgAAUAFGCgAAUAFGCgAAUAFGCgAAUAFGCgAAMDXLwv8AltK8ZIXbCywA
        AAAASUVORK5CYII=
</value>
  </data>
</root>